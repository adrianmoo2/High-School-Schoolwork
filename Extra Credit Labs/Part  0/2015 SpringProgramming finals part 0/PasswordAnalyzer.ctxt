#BlueJ class context
comment0.params=pw
comment0.target=boolean\ isValid(java.lang.String)
comment0.text=\r\n\ \ \ returns\ true\ if\ \r\n\ \ \ \ \ \ \ \ pw\ Contains\ 8\ characters.\r\n\ \ \ \ \ and\ pw\ Contains\ NO\ spaces\r\n\ \ \ \ \ and\ Contains\ at\ least\ one\ of\ the\ following\r\n\ \ \ \ \ \ \ \ \ Both\ UPPER\ case\ and\ lower\ case\ letters\r\n\ \ \ \ \ \ \ \ \ a\ letter\ and\ a\ digit/number\r\n\ \ \ \ \ \ \ \ \ a\ letter\ and\ a\ symbol\r\n\ \r\n
comment1.params=pw
comment1.target=boolean\ hasSymbol(java.lang.String)
comment10.params=pw
comment10.target=int\ getPoints(java.lang.String)
comment11.params=pw
comment11.target=java.lang.String\ getRating(java.lang.String)
comment11.text=\r\n\ \ \ Passwords\ that\ are\ not\ valid\ receive\ a\ rating\ of\ rejected.\ \ \r\n\ \ \ Valid\ password\ with\ 70\ or\ fewer\ points\ received\ a\ rating\ of\ unacceptable.\r\n\ \ \ Passwords\ receiving\ more\ than\ 70\ points\ and\ 80\ points\ or\ less\ receive\ a\ rating\ of\ weak.\r\n\ \ \ Passwords\ receiving\ more\ than\ 80\ points\ and\ 95\ points\ or\ less\ receive\ a\ rating\ of\ average.\r\n\ \ \ Passwords\ receiving\ more\ than\ 95\ points\ and\ 115\ points\ or\ less\ receive\ a\ rating\ of\ good.\r\n\ \ \ Passwords\ receiving\ more\ than\ 115\ points\ receive\ a\ rating\ of\ excellent.\r\n
comment2.params=pw
comment2.target=boolean\ hasNumber(java.lang.String)
comment3.params=pw
comment3.target=boolean\ hasLetter(java.lang.String)
comment4.params=testCode
comment4.target=boolean\ containsWhiteSpace(java.lang.String)
comment5.params=pw
comment5.target=int\ getLengthBonus(java.lang.String)
comment5.text=\r\n\ Length\ bonus\:\ (total\ max\ \=\ 25\ points)\r\n\ \ repeated\ or\ consecutive\ letters\ count\ as\ one\ letter\r\n\ \ \ \ \ \ \ for\ example\:\ "letter"\ has\ length\ 5,\ "bookkeeper"\ has\ length\ 7\ and\ "brrrr111"\ has\ length\ 3\r\n\ \ +2\ for\ each\ additional\ character(s)\ that\ makes\ the\ length\ greater\ than\ 8\ up\ to\ and\ including\ the\ length\ of\ 15.\ \ Max\ of\ 14\ (7\ *\ 2)\ points.\r\n\ \ +1\ for\ one\ additional\ character(s)\ beyond\ 15\ up\ to\ a\ max\ of\ 11\ addition\ points.\r\n
comment6.params=pw
comment6.target=int\ getUpperCaseBonus(java.lang.String)
comment6.text=\r\n\ \ \ Upper\ case\ bonus\:\ \ (total\ max\ \=\ 10\ points)\r\n\ \ \ \ \ \ Repeated\ Upper\ case\ letters\ are\ treated\ as\ separate\ letters\ (example\ \u201CPASS\u201D\ is\ 4\ upper\ case\ letters)\r\n\ \ \ +1\ for\ each\ upper\ case\ letter\ (max\ 5\ points)\r\n\ \ \ +1\ for\ each\ non\ upper\ case\ letter\ (lower\ case,\ numbers\ or\ symbols,\ max\ 5\ points)\r\n
comment7.params=pw
comment7.target=int\ getDigitBonus(java.lang.String)
comment7.text=\r\n\ \ \ Digit\ (number)\ Bonus\ (total\ max\ \=\ 15\ points)\r\n\ \ \ +1\ for\ each\ digit\ contained\ in\ the\ password.\ \ (The\ digits\ 10\ counts\ as\ two\ numbers.\ Max\ of\ 10\ points)\r\n\ \ \ +1\ for\ each\ non\ digit\ (lower/upper\ case\ symbols,\ or\ symbols,\ max\ 5\ points)\r\n\ \ \ \ \ \ Repeated\ non\ digits\ are\ counted\ seperately.\ \ For\ example,\ AAA\ is\ three\ non\ digits\r\n
comment8.params=pw
comment8.target=int\ getSymbolBonus(java.lang.String)
comment8.text=\r\n\ \ \ Symbol\ Bonus\ (total\ max\ \=\ 15\ points)\r\n\ \ \ \ \ \ \ A\ symbol\ is\ any\ character\ that\ is\ not\ a\ letter\ and\ not\ a\ digit/number)\r\n\ \ \ +1\ for\ each\ Symbol\ contained\ in\ the\ password.\ \ (max\ 10\ points)\r\n\ \ \ +1\ for\ each\ non\ symbol\ (lower/upper\ case\ letter,\ or\ digit,\ max\ 5\ points)\r\n
comment9.params=pw
comment9.target=int\ getCombinationBonus(java.lang.String)
comment9.text=\r\n\ \ Combination\ Bonus\ (total\ max\ \=\ 10\ points)\r\n\ \ \ \ \ A\ combination\ is\ defined\ to\ be\ any\ of\ the\ following\r\n\ \ \ \ \ -\ \ \ Letter\ (upper\ of\ lower\ case)\ followed\ immediately\ \ by\ a\ digit/number\r\n\ \ \ \ \ -\ \ \ letter\ (upper\ of\ lower\ case)\ followed\ immediately\ by\ a\ symbol\r\n\ \ \ \ \ -\ \ \ Digit/number\ followed\ immediately\ by\ a\ symbol\r\n\ \ \ \ \ -\ \ \ Symbol\ followed\ immediately\ by\ a\ digit/number\r\n\ \ \ \ \ The\ password\ containing\ \u201CA7\#\u201D\ has\ two\ combinations\r\n\ \ +1\ for\ each\ combination\ in\ the\ password.\ \ (max\ 10\ points)\r\n
numComments=12
