#BlueJ class context
comment0.params=type
comment0.target=DorasGreatMapAdventure(String)
comment0.text=\nThou\ shall\ not\ modify\ the\ constructor.\nModify\ the\ constructor\ of\ iAmTheMap\ may\ cause\ you\ other\ methods\ to\ fail\ toString()\ testing\n\n
comment1.target=Set<K>\ keySet()
comment1.text=\nreturns\ the\ set\ of\ keys\ from\ iAmTheMap\nI\ know,\ I\ gave\ it\ to\ you.\n\n
comment10.params=key\ tico
comment10.target=void\ remove(K,\ V)
comment10.text=\nif\ tico\ is\ in\ the\ Set\ associate\ with\ key\nremove\ tico\ from\ the\ set\ associated\ with\ key.\nif\ the\ Set\ becomes\ Empty,\ remove\ the\ key\ from\ iAmTheMap\notherwise\ (tico\ is\ not\ in\ the\ Set)\ \n-\ do\ not\ throw\ an\ exception,\ that\ is\ exit\ the\ method\ gracefully\n\n
comment11.params=isa
comment11.target=void\ removeFromAll(V)
comment11.text=\nremove\ isa\ from\ all\ sets\nif\ the\ Set\ becomes\ Empty,\ remove\ the\ key\ from\ iAmTheMap\n\n
comment12.params=otherDorasGreatMapAdventure
comment12.target=boolean\ equals(Object)
comment12.text=\nEvery\ key\ in\ this.iAmTheMap\ is\ a\ key\ in\ otherDorasGreatMapAdventure.iAMTheMap\nEvery\ key\ in\ otherDorasGreatMapAdventure.iAmTheMap\ is\ a\ key\ in\ this.iAMTheMap\nEach\ pair\ of\ set\ for\ a\ given\ key\ are\ equal\nthat\ is,\ \ iAmTheMap.get(key).equals(otherDorasGreatMapAdventure.iAmTheMap.get(key))\n\n
comment13.target=String\ toString()
comment13.text=\nThe\ String\ should\ be\ of\ the\ form\:\n"{key.toString()\=iAmThemap.get(key).toString(),\ <repeat\ for\ all\ keys>}\na\ single\ \=\ between\ key\ and\ set,\ with\ a\ comma\ and\ a\ single\ space\ between\ each\ key\ set\ pair\n\n
comment14.target=V\ maxItem()
comment14.text=\nFinds\ the\ largest\ value\ in\ all\ the\ sets\ contained\ in\ the\ map.\nYou\ should\ assume\ that\ all\ Sets\ contain\ comparable\ items\nand\ that\ all\ sets\ are\ Comparable\ to\ each\ other\nDorasGreatMapAdventure\ is\ NOT\ empty\n\n
comment2.target=Map<K,Set<V>>\ getMap()
comment2.text=\nreturns\ iAmTheMap\ -\ Just\ in\ case\ there\ is\ a\ DorasGreatMapAdventureTheSequel\nI\ know,\ I\ gave\ it\ to\ you.\n\n
comment3.target=int\ size()
comment3.text=\nreturns\ the\ total\ number\ of\ items\ in\ the\ iAmTheMap\nThat\ is,\ the\ sum\ of\ the\ size\ of\ each\ set\ assocaiated\ with\ all\ keys\nplus\ the\ number\ of\ keys\nredundant\ items\ are\ counted\ multiple\ times.\n\n
comment4.target=int\ numItems()
comment4.text=\nreturns\ the\ total\ number\ of\ non\ key\ items\ in\ the\ iAmTheMap\nThat\ is,\ the\ sum\ of\ the\ size\ of\ each\ set\ assocaiated\ with\ all\ keys\n\n
comment5.target=int\ numDistinctItems()
comment5.text=\nreturns\ the\ total\ number\ of\ distinct\ non\ key\ items\ in\ the\ iAmTheMap\nThat\ is,\ the\ sum\ of\ the\ size\ of\ each\ set\ assocaiated\ with\ all\ keys,\nnot\ counting\ duplicates\n\n
comment6.target=boolean\ isEmpty()
comment6.text=\nreturns\ true\ iff\niAmTheMap\ is\ Empty\ or\ all\ sets\ in\ the\ Map\ are\ Empty\notherwise\ returns\ false\n\n
comment7.params=diego
comment7.target=boolean\ contains(Object)
comment7.text=\nreturns\ true\ if\ a\ one\ or\ more\ associated\ set\ contains\ diego\notherwise\ (no\ set\ contains\ diego)\ return\ false\n\n\n
comment8.target=Object[]\ toArray()
comment8.text=\nreturns\ an\ array\ containing\ all\ elements\ from\ the\ associated\ sets\nitems\ may\ appear\ in\ the\ array\ more\ than\ once\nkeys\ are\ not\ to\ be\ added\ to\ the\ array\n\n
comment9.params=key\ tico
comment9.target=void\ add(K,\ V)
comment9.text=\nadd\ tico\ to\ the\ set\ associated\ with\ key.\nIf\ key\ is\ not\ in\ iAmTheMap,\ add\ a\ new\ Set\ containg\ tico\ as\ its\ sole\ member\n\n
numComments=15
